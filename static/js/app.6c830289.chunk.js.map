{"version":3,"sources":["App.js"],"names":["defaultApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","db","getFirestore","HomeScreen","navigation","useEffect","setTimeout","getAuth","currentUser","reset","index","routes","name","style","flex","alignItems","justifyContent","Example","useState","show","setShow","email","setEmail","password","setPassword","space","w","value","onChangeText","base","md","InputLeftElement","as","size","ml","color","placeholder","type","InputRightElement","onPress","mr","signInWithEmailAndPassword","then","userCredential","user","navigate","catch","error","code","message","console","log","DetailsScreen","notes","setNotes","note","setNote","deleteNote","docId","noteRef","doc","uid","deleteDoc","getNotes","e","addNote","text","docRef","addDoc","collection","pasteAndAdd","Clipboard","noteList","getDocs","docs","map","noteDoc","data","id","padding","width","renderItem","item","borderBottomWidth","mt","flexDirection","_dark","bold","backgroundColor","m","keyExtractor","Stack","createNativeStackNavigator","App","Navigator","initialRouteName","Screen","component"],"mappings":"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","file":"static/js/app.6c830289.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport {\n  Input,\n  Icon,\n  Pressable,\n  Box,\n  NativeBaseProvider,\n  FlatList,\n  Text,\n  Button,\n} from \"native-base\";\nimport { initializeApp } from \"firebase/app\";\nimport { getReactNativePersistence } from \"firebase/auth/react-native\";\nimport {\n  initializeAuth,\n  getAuth,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  collection,\n  doc,\n  deleteDoc,\n  addDoc,\n  getDocs,\n} from \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Clipboard from \"expo-clipboard\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDbSU1JYhhDpX0FvFOVg2Lr3Du6KGzwPog\",\n  authDomain: \"notes-9fde6.firebaseapp.com\",\n  projectId: \"notes-9fde6\",\n  storageBucket: \"notes-9fde6.appspot.com\",\n  messagingSenderId: \"223252681610\",\n  appId: \"1:223252681610:web:935523b2912f8c0230ee73\",\n  measurementId: \"G-SGFSYBX6B3\",\n};\n\nconst defaultApp = initializeApp(firebaseConfig);\nconst auth = initializeAuth(defaultApp, {\n  persistence: getReactNativePersistence(AsyncStorage),\n});\nconst db = getFirestore(defaultApp);\n\nfunction HomeScreen({ navigation }) {\n  useEffect(() => {\n    setTimeout(() => {\n      if (getAuth().currentUser) {\n        navigation.reset({\n          index: 0,\n          routes: [{ name: 'Details' }],\n        });\n      }\n    }, 600);\n  }, []);\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Example navigation={navigation} />\n    </View>\n  );\n}\nconst Example = ({ navigation }) => {\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <Box space={4} w=\"100%\" alignItems=\"center\">\n      <Input\n        value={email}\n        onChangeText={setEmail}\n        w={{\n          base: \"75%\",\n          md: \"25%\",\n        }}\n        InputLeftElement={\n          <Icon\n            as={<MaterialIcons name=\"person\" />}\n            size={5}\n            ml=\"2\"\n            color=\"muted.400\"\n          />\n        }\n        placeholder=\"Name\"\n      />\n      <Input\n        value={password}\n        onChangeText={setPassword}\n        w={{\n          base: \"75%\",\n          md: \"25%\",\n        }}\n        type={show ? \"text\" : \"password\"}\n        InputRightElement={\n          <Pressable onPress={() => setShow(!show)}>\n            <Icon\n              as={\n                <MaterialIcons name={show ? \"visibility\" : \"visibility-off\"} />\n              }\n              size={5}\n              mr=\"2\"\n              color=\"muted.400\"\n            />\n          </Pressable>\n        }\n        placeholder=\"Password\"\n      />\n      <Button\n        onPress={() => {\n          const auth = getAuth();\n          signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n              // Signed in\n              const user = userCredential.user;\n              navigation.navigate(\"Details\");\n              // ...\n            })\n            .catch((error) => {\n              const errorCode = error.code;\n              const errorMessage = error.message;\n              console.log(\"error\", error);\n            });\n        }}\n      >\n        Sign In\n      </Button>\n    </Box>\n  );\n};\n\nfunction DetailsScreen() {\n  const [notes, setNotes] = useState([]);\n  const [note, setNote] = useState(\"\");\n\n  useEffect(() => {\n\n  }, [])\n\n  const deleteNote = async (docId) => {\n    try {\n      const auth = getAuth();\n      const noteRef = await doc(db, \"users/\" + auth.currentUser.uid + \"/notes\", docId);\n      await deleteDoc(noteRef);\n      getNotes();\n\n      console.log(\"Document written with ID:\", noteRef);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n\n  const addNote = async (text) => {\n    try {\n      const auth = getAuth();\n      const docRef = await addDoc(\n        collection(db, \"users/\" + auth.currentUser.uid + \"/notes\"),\n        {\n          note: text ? text : note,\n        }\n      );\n      getNotes();\n      setNote(\"\");\n\n      console.log(\"Document written with ID:\", docRef);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n\n  const pasteAndAdd = async () => {\n    const text = await Clipboard.getStringAsync();\n    addNote(text);\n  };\n\n  const getNotes = async () => {\n    const querySnapshot = await getDocs(\n      collection(db, \"users/\" + auth.currentUser.uid + \"/notes\")\n    );\n    const noteList = querySnapshot.docs.map((doc) => {\n      const noteDoc = doc.data();\n      noteDoc.id = doc.id;\n      return noteDoc;\n    });\n    setNotes(noteList);\n  };\n\n  useEffect(async () => {\n    await getNotes();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 20,\n      }}\n    >\n      <Input\n        value={note}\n        onChangeText={setNote}\n        w={{\n          base: \"75%\",\n          md: \"25%\",\n        }}\n        type={\"text\"}\n        InputRightElement={\n          <>\n          <Pressable onPress={() => addNote()}>\n            <Icon\n              as={<MaterialIcons name={\"add\"} />}\n              size={8}\n              mr=\"2\"\n              color=\"muted.400\"\n            />\n          </Pressable>\n          <Pressable onPress={pasteAndAdd}>\n            <Icon\n              as={<MaterialIcons name=\"content-paste\" />}\n              size={8}\n              mr=\"2\"\n              color=\"muted.400\"\n            />\n          </Pressable>\n          </>\n        }\n        placeholder=\"note\"\n      />\n      <FlatList\n        data={notes}\n        width=\"full\"\n        renderItem={({ item }) => (\n          <Box borderBottomWidth=\"1\" mt=\"2\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Text\n              _dark={{\n                color: \"warmGray.50\",\n              }}\n              color=\"coolGray.800\"\n              bold\n            >\n              {item.note}\n            </Text>\n            <Button onPress={() => deleteNote(item.id)} backgroundColor=\"danger.600\" m=\"2\">\n              Delete\n            </Button>\n          </Box>\n        )}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NativeBaseProvider>\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Home\">\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </NativeBaseProvider>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}